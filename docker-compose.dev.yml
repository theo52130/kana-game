services:
  next-app-dev:
    container_name: next-app-dev
    build:
      context: ./website
      dockerfile: Dockerfile.dev
    volumes:
      - ./website:/app
      - /app/.next
      - ./website/.env:/app/.env
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - WATCHPACK_POLLING=true
      - CHOKIDAR_USEPOLLING=true
      - HOSTNAME=0.0.0.0
      - NEXT_PUBLIC_WEBSOCKET_HOSTNAME=localhost
      - WDS_SOCKET_HOST=localhost
      - NEXT_WEBPACK_USEPOLLING=1
    command: npm run dev
    networks:
      - uslo-networks-dev
    depends_on:
      postgres-dev:
        condition: service_healthy


  nginx-dev:
    build:
      context: ./nginx
      dockerfile: Dockerfile.dev
    container_name: nginx-dev
    ports:
      - "80:80"
    depends_on:
      - next-app-dev
    networks:
      - uslo-networks-dev

  postgres-dev:
    container_name: postgres-dev
    image: postgres:15
    environment:
      POSTGRES_PASSWORD: mdp_kanagame_db
      POSTGRES_USER: kanagame_user_db
      POSTGRES_DB: kanagame_db
    volumes:
      - postgres:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped
    networks:
      - uslo-networks-dev
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U kanagame_user_db"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

volumes:
  postgres:
    # driver: local

networks:
  uslo-networks-dev:
    driver: bridge
